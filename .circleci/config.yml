version: 2.1

orbs:
  ruby: circleci/ruby@1.3.0
  node: circleci/node@5.0.0
  aws-cli: circleci/aws-cli@2.1.0
  aws-ecr: circleci/aws-ecr@7.3.0
  aws-ecs: circleci/aws-ecs@2.2.1

jobs:
  # build:
  #   docker:
  #     - image: cimg/ruby:2.7.5-node
  #   working_directory: ~/dokotabe-app/src
  #   steps:
  #     - checkout:
  #         path: ~/dokotabe-app
  #     - ruby/install-deps
  #     - node/install-packages:
  #         pkg-manager: yarn

  # test:
  #   docker:
  #     - image: cimg/ruby:2.7.5-node
  #     - image: circleci/postgres:13.5
  #       environment:
  #         POSTGRES_USER: postgres
  #         POSTGRES_HOST_AUTH_METHOD: trust
  #         POSTGRES_DB: app_test
  #     - image: selenium/standalone-chrome:latest
  #       name: chrome
  #   environment:
  #     BUNDLE_JOBS: "3"
  #     BUNDLE_RETRY: "3"
  #     APP_DATABASE_HOST: "127.0.0.1"
  #     RAILS_ENV: test
  #   working_directory: ~/dokotabe-app/src
  #   steps:
  #     - checkout:
  #         path: ~/dokotabe-app
  #     - ruby/install-deps
  #     - node/install-packages:
  #         pkg-manager: yarn
  #     - run:
  #         name: Database setup
  #         command: bundle exec rails db:migrate
  #     - run:
  #         name: RuboCop
  #         command: bundle exec rubocop
  #     - run:
  #         name: RSpec
  #         command: bundle exec rspec

  build-and-push-image-for-dokotabe:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout:
          path: ~/dokotabe-app
      - aws-cli/install:
          override-installed: true
      # ECRにnginxコンテナをプッシュ
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: ./nginx/Dockerfile
          repo: dokotabe-web
          tag: "latest"
      # ECRにrailsコンテナをプッシュ
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: ./Dockerfile
          repo: dokotabe-app
          tag: "latest"

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      # - build
      # - test:
      #     requires:
      #       - build
      # mainブランチにpushされた場合のみdeployジョブを実行する
      - build-and-push-image-for-dokotabe
        # requires:
        #   - test
        # filters:
        #   branches:
        #     only: main
      # ECSのdokotabe-clustorを更新
      - aws-ecs/deploy-service-update:
          aws-region: AWS_REGION
          family: "dokotabe"
          cluster-name: "dokotabe-clustor"
          service-name: "dokotabe-service-for-ecs"
          container-image-name-updates: "container=nginx, image-and-tag=dokotabe-web:latest, container=rails, image-and-tag=dokotabe-app:latest"
          requires:
            - build-and-push-image-for-dokotabe
