version: 2.1

orbs:
  ruby: circleci/ruby@1.3.0
  node: circleci/node@5.0.0
  heroku: circleci/heroku@1.2.6

jobs:
  build:
    docker:
      - image: cimg/ruby:2.7.5-node
    working_directory: ~/dokotabe-app/src
    steps:
      - checkout:
          path: ~/dokotabe-app
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn

  test:
    docker:
      - image: cimg/ruby:2.7.5-node
      - image: circleci/postgres:13.5
        environment:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: app_test
      - image: selenium/standalone-chrome:latest
        name: chrome
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
    working_directory: ~/dokotabe-app/src
    steps:
      - checkout:
          path: ~/dokotabe-app
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Database setup
          command: bundle exec rails db:migrate
      - run:
          name: RuboCop
          command: bundle exec rubocop
      - run:
          name: RSpec
          command: bundle exec rspec

  # EC2 に SSH 接続・デプロイを実行
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - add_ssh_keys:
          fingerprints:
            - "19:b5:48:89:37:3a:01:d0:cc:93:e9:95:34:94:83:4b"
      - run:
          name: SSH connection to EC2
          command: ssh ${USER_NAME}@${HOST_NAME}
      - run:
          name: Git pull
          command: cd /rails/dokotabe-app && git pull origin main
      - run:
          name: Clean docker
          command: docker-compose -f docker-compose.production.yml down && docker system prune -af
      - run:
          name: Start docker
          command: docker-compose -f docker-compose.production.yml build && docker-compose -f docker-compose.production.yml up -d
      - run:
          name: Database setup
          command: docker-compose exec app rails db:migrate RAILS_ENV=production

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      # mainブランチにpushされた場合のみdeployジョブを実行する
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: main
